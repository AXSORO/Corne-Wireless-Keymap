/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    tab {
      bindings = <&trans>;
      key-positions = <2 3>;
    };

    ctrl {
      bindings = <&kp LCTRL>;
      key-positions = <26 27>;
    };

    cmd {
      bindings = <&kp LCMD>;
      key-positions = <37 38>;
    };

    alt {
      bindings = <&kp LEFT_ALT>;
      key-positions = <39 40>;
    };

    shift {
      bindings = <&kp LSHIFT>;
      key-positions = <8 9>;
    };

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <32 33>;
    };
  };

  macros {
    m1: m1 {
      compatible = "zmk,behavior-macro";
      label = "M1";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    m2: m2 {
      compatible = "zmk,behavior-macro";
      label = "M2";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    m3: m3 {
      compatible = "zmk,behavior-macro";
      label = "M3";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    m4: m4 {
      compatible = "zmk,behavior-macro";
      label = "M4";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    m5: m5 {
      compatible = "zmk,behavior-macro";
      label = "M5";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    m6: m6 {
      compatible = "zmk,behavior-macro";
      label = "M6";
      #binding-cells = <0>;
      bindings = <&none>;
    };
    win_reset: win_reset {
      compatible = "zmk,behavior-macro";
      label = "WIN_RESET";
      #binding-cells = <0>;
      bindings = <&kp RIGHT_CONTROL &kp RIGHT_ALT &kp DELETE>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R          &kp T        &kp Y  &kp U              &kp I    &kp O          &kp P   &kp BSLH
&kp LCTRL  &kp A  &kp S     &kp D  &kp F          &kp G        &kp H  &kp J              &kp K    &kp L  &kp SEMICOLON    &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V          &kp B        &kp N  &kp M          &kp COMMA  &kp DOT       &kp FSLH  &kp ENTER
                         &kp LGUI  &mo 1  &kp BACKSPACE    &kp SPACE  &mo 2  &kp RIGHT_CONTROL
      >;
    };

    raise {
      bindings = <
&win_reset  &kp N1  &kp N2  &kp N3  &kp N4      &kp N5    &kp N6  &kp N7  &kp N8   &kp N9   &kp N0   &trans
    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
    &trans  &trans  &trans  &trans  &trans      &trans    &trans  &trans  &trans   &trans   &trans   &trans
                            &trans  &trans  &kp DELETE    &trans   &mo 3  &trans
      >;
    };

    lower {
      bindings = <
&win_reset  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR     &trans
    &trans    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
    &trans    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                &trans     &mo 3     &trans       &trans     &trans           &trans
      >;
    };

    both {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
&trans     &m1     &m2     &m3  &trans  &bt BT_SEL 2      &bt BT_CLR  &trans     &m4     &m5     &m6  &trans
                        &trans  &trans        &trans          &trans  &trans  &trans
      >;
    };
  };
};
